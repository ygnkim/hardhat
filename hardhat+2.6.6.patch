diff --git a/node_modules/hardhat/internal/core/jsonrpc/types/output/block.js b/node_modules/hardhat/internal/core/jsonrpc/types/output/block.js
index 909e8fd..6261f34 100644
--- a/node_modules/hardhat/internal/core/jsonrpc/types/output/block.js
+++ b/node_modules/hardhat/internal/core/jsonrpc/types/output/block.js
@@ -28,23 +28,23 @@ const baseBlockResponse = {
     number: io_ts_1.nullable(base_types_1.rpcQuantity),
     hash: io_ts_1.nullable(base_types_1.rpcHash),
     parentHash: base_types_1.rpcHash,
-    nonce: io_ts_1.optional(base_types_1.rpcData),
-    sha3Uncles: base_types_1.rpcHash,
+    nonce: io_ts_1.optional(io_ts_1.nullable(base_types_1.rpcData)),
+    sha3Uncles: io_ts_1.nullable(base_types_1.rpcHash),
     logsBloom: base_types_1.rpcData,
     transactionsRoot: base_types_1.rpcHash,
     stateRoot: base_types_1.rpcHash,
     receiptsRoot: base_types_1.rpcHash,
-    miner: base_types_1.rpcAddress,
-    difficulty: base_types_1.rpcQuantity,
-    totalDifficulty: base_types_1.rpcQuantity,
+    miner: io_ts_1.nullable(base_types_1.rpcAddress),
+    difficulty: io_ts_1.nullable(base_types_1.rpcQuantity),
+    totalDifficulty: io_ts_1.nullable(base_types_1.rpcQuantity),
     extraData: base_types_1.rpcData,
     size: base_types_1.rpcQuantity,
-    gasLimit: base_types_1.rpcQuantity,
+    gasLimit: io_ts_1.nullable(base_types_1.rpcQuantity),
     gasUsed: base_types_1.rpcQuantity,
     timestamp: base_types_1.rpcQuantity,
-    uncles: t.array(base_types_1.rpcHash, "HASH Array"),
-    mixHash: io_ts_1.optional(base_types_1.rpcHash),
-    baseFeePerGas: io_ts_1.optional(base_types_1.rpcQuantity),
+    uncles: io_ts_1.nullable(t.array(base_types_1.rpcHash, "HASH Array")),
+    mixHash: io_ts_1.optional(io_ts_1.nullable(base_types_1.rpcHash)),
+    baseFeePerGas: io_ts_1.optional(io_ts_1.nullable(base_types_1.rpcQuantity)),
 };
 exports.rpcBlock = t.type(Object.assign(Object.assign({}, baseBlockResponse), { transactions: t.array(base_types_1.rpcHash, "HASH Array") }), "RpcBlock");
 exports.rpcBlockWithTransactions = t.type(Object.assign(Object.assign({}, baseBlockResponse), { transactions: t.array(transaction_1.rpcTransaction, "RpcTransaction Array") }), "RpcBlockWithTransactions");
diff --git a/node_modules/hardhat/internal/core/jsonrpc/types/output/transaction.js b/node_modules/hardhat/internal/core/jsonrpc/types/output/transaction.js
index 2d383ce..af79600 100644
--- a/node_modules/hardhat/internal/core/jsonrpc/types/output/transaction.js
+++ b/node_modules/hardhat/internal/core/jsonrpc/types/output/transaction.js
@@ -37,15 +37,15 @@ exports.rpcTransaction = t.type({
     to: io_ts_1.optional(io_ts_1.nullable(base_types_1.rpcAddress)),
     transactionIndex: io_ts_1.nullable(base_types_1.rpcQuantity),
     value: base_types_1.rpcQuantity,
-    v: base_types_1.rpcQuantity,
-    r: base_types_1.rpcQuantity,
-    s: base_types_1.rpcQuantity,
+    v: io_ts_1.nullable(base_types_1.rpcQuantity),
+    r: io_ts_1.nullable(base_types_1.rpcQuantity),
+    s: io_ts_1.nullable(base_types_1.rpcQuantity),
     // EIP-2929/2930 properties
-    type: io_ts_1.optional(base_types_1.rpcQuantity),
+    type: io_ts_1.optional(io_ts_1.nullable(base_types_1.rpcQuantity)),
     chainId: io_ts_1.optional(io_ts_1.nullable(base_types_1.rpcQuantity)),
-    accessList: io_ts_1.optional(access_list_1.rpcAccessList),
+    accessList: io_ts_1.optional(io_ts_1.nullable(access_list_1.rpcAccessList)),
     // EIP-1559 properties
-    maxFeePerGas: io_ts_1.optional(base_types_1.rpcQuantity),
-    maxPriorityFeePerGas: io_ts_1.optional(base_types_1.rpcQuantity),
+    maxFeePerGas: io_ts_1.optional(io_ts_1.nullable(base_types_1.rpcQuantity)),
+    maxPriorityFeePerGas: io_ts_1.optional(io_ts_1.nullable(base_types_1.rpcQuantity)),
 }, "RpcTransaction");
 //# sourceMappingURL=transaction.js.map
\ No newline at end of file
diff --git a/node_modules/hardhat/src/internal/core/jsonrpc/types/output/block.ts b/node_modules/hardhat/src/internal/core/jsonrpc/types/output/block.ts
index 6dac340..2f230e7 100644
--- a/node_modules/hardhat/src/internal/core/jsonrpc/types/output/block.ts
+++ b/node_modules/hardhat/src/internal/core/jsonrpc/types/output/block.ts
@@ -9,23 +9,23 @@ const baseBlockResponse = {
   number: nullable(rpcQuantity),
   hash: nullable(rpcHash),
   parentHash: rpcHash,
-  nonce: optional(rpcData),
-  sha3Uncles: rpcHash,
+  nonce: optional(nullable(rpcData)),
+  sha3Uncles: nullable(rpcHash),
   logsBloom: rpcData,
   transactionsRoot: rpcHash,
   stateRoot: rpcHash,
   receiptsRoot: rpcHash,
-  miner: rpcAddress,
-  difficulty: rpcQuantity,
-  totalDifficulty: rpcQuantity,
+  miner: nullable(rpcAddress),
+  difficulty: nullable(rpcQuantity),
+  totalDifficulty: nullable(rpcQuantity),
   extraData: rpcData,
   size: rpcQuantity,
-  gasLimit: rpcQuantity,
+  gasLimit: nullable(rpcQuantity),
   gasUsed: rpcQuantity,
   timestamp: rpcQuantity,
-  uncles: t.array(rpcHash, "HASH Array"),
-  mixHash: optional(rpcHash),
-  baseFeePerGas: optional(rpcQuantity),
+  uncles: nullable(t.array(rpcHash, "HASH Array")),
+  mixHash: optional(nullable(rpcHash)),
+  baseFeePerGas: optional(nullable(rpcQuantity)),
 };
 
 export type RpcBlock = t.TypeOf<typeof rpcBlock>;
diff --git a/node_modules/hardhat/src/internal/core/jsonrpc/types/output/transaction.ts b/node_modules/hardhat/src/internal/core/jsonrpc/types/output/transaction.ts
index 7b315ce..21d2ece 100644
--- a/node_modules/hardhat/src/internal/core/jsonrpc/types/output/transaction.ts
+++ b/node_modules/hardhat/src/internal/core/jsonrpc/types/output/transaction.ts
@@ -19,18 +19,18 @@ export const rpcTransaction = t.type(
     to: optional(nullable(rpcAddress)),
     transactionIndex: nullable(rpcQuantity),
     value: rpcQuantity,
-    v: rpcQuantity,
-    r: rpcQuantity,
-    s: rpcQuantity,
+    v: nullable(rpcQuantity),
+    r: nullable(rpcQuantity),
+    s: nullable(rpcQuantity),
 
     // EIP-2929/2930 properties
-    type: optional(rpcQuantity),
+    type: optional(nullable(rpcQuantity)),
     chainId: optional(nullable(rpcQuantity)),
-    accessList: optional(rpcAccessList),
+    accessList: optional(nullable(rpcAccessList)),
 
     // EIP-1559 properties
-    maxFeePerGas: optional(rpcQuantity),
-    maxPriorityFeePerGas: optional(rpcQuantity),
+    maxFeePerGas: optional(nullable(rpcQuantity)),
+    maxPriorityFeePerGas: optional(nullable(rpcQuantity)),
   },
   "RpcTransaction"
 );
